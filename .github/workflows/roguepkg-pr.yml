name: 'OSV Security Scan on PR'

on:
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'package.json'
      - 'package-lock.json'
      - 'yarn.lock'
      - '**/package.json'
      - '**/package-lock.json'
      - '**/yarn.lock'

permissions:
  contents: read
  pull-requests: write

jobs:
  malware-scan:
    name: 'Scan for Malware'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run OSV Malware Scanner
        id: osv-scan
        uses: radioactivetobi/roguepkg@v1  # Or use ./ for local testing
        with:
          scan-path: '.'
          malware-only: 'true'
          fail-on-malware: 'true'
      
      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const malwareCount = '${{ steps.osv-scan.outputs.malware-found }}';
            const totalScanned = '${{ steps.osv-scan.outputs.total-scanned }}';
            const status = '${{ steps.osv-scan.outputs.scan-status }}';
            
            let emoji = 'âœ…';
            let message = 'No malware detected in dependencies';
            let color = 'ðŸŸ¢';
            
            if (malwareCount > 0) {
              emoji = 'ðŸš¨';
              message = `**MALWARE DETECTED** in ${malwareCount} package(s)`;
              color = 'ðŸ”´';
            }
            
            const comment = `## ${emoji} OSV Security Scan Results
            
            ${color} **Status:** ${status}
            
            ðŸ“Š **Summary:**
            - Total packages scanned: ${totalScanned}
            - Malware detected: ${malwareCount}
            
            ${message}
            
            ---
            <sub>Powered by [OSV.dev](https://osv.dev) - Free Open Source Vulnerability Database</sub>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

